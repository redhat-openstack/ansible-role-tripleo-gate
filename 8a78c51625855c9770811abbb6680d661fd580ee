{
  "comments": [
    {
      "key": {
        "uuid": "baa041b7_f9fd90b1",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1003529
      },
      "writtenOn": "2016-05-26T12:50:43Z",
      "side": 1,
      "message": "probably want review.rdoproject.org here too",
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_b98ee82b",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 23,
      "author": {
        "id": 1001800
      },
      "writtenOn": "2016-05-26T13:55:00Z",
      "side": 1,
      "message": "Ack.",
      "parentUuid": "baa041b7_f9fd90b1",
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_7943c013",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2016-05-26T12:42:57Z",
      "side": 1,
      "message": "It\u0027s better to compile regexps in the beginning of file: \n  \n  tag_re \u003d re.compile(...)\n  tag \u003d tag_re.search...",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 71
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_d98bec1d",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 32,
      "author": {
        "id": 1001800
      },
      "writtenOn": "2016-05-26T13:55:00Z",
      "side": 1,
      "message": "Python automatically caches recent regexp searches, so it would just add an extra line for no reason. See the note part here: https://docs.python.org/2/library/re.html#re.compile",
      "parentUuid": "baa041b7_7943c013",
      "range": {
        "startLine": 32,
        "startChar": 0,
        "endLine": 32,
        "endChar": 71
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_d93acc98",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2016-05-26T12:42:57Z",
      "side": 1,
      "message": "more pythonic will be: \"if target in hostname\"",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 51
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_7984e009",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 42,
      "author": {
        "id": 1001800
      },
      "writtenOn": "2016-05-26T13:55:00Z",
      "side": 1,
      "message": "You\u0027re right, thanks.",
      "parentUuid": "baa041b7_d93acc98",
      "range": {
        "startLine": 42,
        "startChar": 0,
        "endLine": 42,
        "endChar": 51
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_9925645d",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1003529
      },
      "writtenOn": "2016-05-26T12:50:43Z",
      "side": 1,
      "message": "this is unfortunately already important, upstream backport policy is to keep the same change-id across branches, so this will happen for any change that is backported.",
      "range": {
        "startLine": 75,
        "startChar": 13,
        "endLine": 75,
        "endChar": 35
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_d992cc4b",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 75,
      "author": {
        "id": 1001800
      },
      "writtenOn": "2016-05-26T13:55:00Z",
      "side": 1,
      "message": "That\u0027s a pity, it will double our API calls, and will make things more complicated. Oh well, I\u0027ll add it.",
      "parentUuid": "baa041b7_9925645d",
      "range": {
        "startLine": 75,
        "startChar": 13,
        "endLine": 75,
        "endChar": 35
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_b964a8b8",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2016-05-26T12:42:57Z",
      "side": 1,
      "message": "you can just \"+\"",
      "range": {
        "startLine": 77,
        "startChar": 17,
        "endLine": 77,
        "endChar": 21
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_799bc066",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 77,
      "author": {
        "id": 1001800
      },
      "writtenOn": "2016-05-26T13:55:00Z",
      "side": 1,
      "message": "Python concatenates really slowly with \"+\" compared to other methods. See https://waymoot.org/home/python_string/\n\nNot that it matters too much in this case, but it\u0027s a good habit to use .join()",
      "parentUuid": "baa041b7_b964a8b8",
      "range": {
        "startLine": 77,
        "startChar": 17,
        "endLine": 77,
        "endChar": 21
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_3971b876",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2016-05-26T12:42:57Z",
      "side": 1,
      "message": "might be more readable:   \n  if data[\u0027project\u0027] not in [d[\u0027project\u0027] for d in deps]",
      "range": {
        "startLine": 96,
        "startChar": 14,
        "endLine": 96,
        "endChar": 19
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_99afa47c",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1001800
      },
      "writtenOn": "2016-05-26T13:55:00Z",
      "side": 1,
      "message": "The original line is a generator expression (https://www.python.org/dev/peps/pep-0289/) that doesn\u0027t create the full list in memory, making it more more efficient.\n\nOf course it\u0027s not too significant here, but it\u0027s a bit more efficient. :)",
      "parentUuid": "baa041b7_3971b876",
      "range": {
        "startLine": 96,
        "startChar": 14,
        "endLine": 96,
        "endChar": 19
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_194ef4c0",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 96,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2016-05-26T14:26:02Z",
      "side": 1,
      "message": "oh, no problem to make generator :) just use ()\n\n  if data[\u0027project\u0027] not in (d[\u0027project\u0027] for d in deps)",
      "parentUuid": "baa041b7_99afa47c",
      "range": {
        "startLine": 96,
        "startChar": 14,
        "endLine": 96,
        "endChar": 19
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_59fd9cb2",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2016-05-26T12:42:57Z",
      "side": 1,
      "message": "why not just sys.argv[1:]",
      "range": {
        "startLine": 117,
        "startChar": 26,
        "endLine": 117,
        "endChar": 67
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_19c4b43d",
        "filename": "files/jenkins_changes.py",
        "patchSetId": 4
      },
      "lineNbr": 117,
      "author": {
        "id": 1001800
      },
      "writtenOn": "2016-05-26T13:55:00Z",
      "side": 1,
      "message": "Right. :)",
      "parentUuid": "baa041b7_59fd9cb2",
      "range": {
        "startLine": 117,
        "startChar": 26,
        "endLine": 117,
        "endChar": 67
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_199f1460",
        "filename": "tasks/build.yml",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1007211
      },
      "writtenOn": "2016-05-26T13:10:41Z",
      "side": 1,
      "message": "can this be artg_change instead (scoped prefix), or is it a pre-existing fact from somewhere else that we\u0027re resetting?",
      "range": {
        "startLine": 3,
        "startChar": 4,
        "endLine": 3,
        "endChar": 10
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_f9beb0ac",
        "filename": "tasks/build.yml",
        "patchSetId": 4
      },
      "lineNbr": 3,
      "author": {
        "id": 1001800
      },
      "writtenOn": "2016-05-26T13:55:00Z",
      "side": 1,
      "message": "Sure it can, I just forgot the prefixing. :)",
      "parentUuid": "baa041b7_199f1460",
      "range": {
        "startLine": 3,
        "startChar": 4,
        "endLine": 3,
        "endChar": 10
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_196cb49a",
        "filename": "tasks/main.yml",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1003529
      },
      "writtenOn": "2016-05-26T12:50:43Z",
      "side": 1,
      "message": "If we are already creating python, why not make modules?\n\nThis line is grossly long this way.",
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_f9a7d0a4",
        "filename": "tasks/main.yml",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1002450
      },
      "writtenOn": "2016-05-26T13:23:21Z",
      "side": 1,
      "message": "+1 for module",
      "range": {
        "startLine": 8,
        "startChar": 2,
        "endLine": 8,
        "endChar": 10
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_39d098f5",
        "filename": "tasks/main.yml",
        "patchSetId": 4
      },
      "lineNbr": 8,
      "author": {
        "id": 1001800
      },
      "writtenOn": "2016-05-26T13:55:00Z",
      "side": 1,
      "message": "I can actually shorten the line with \"\u003e\", if that\u0027s the problem. :)\n\nAs this is quite one shot solution for this specific problem, I didn\u0027t want to bother writing it as a module and making sure I install them in the proper library folders, but if wrapping them in the role[1] works (suggested by Sagi), then I\u0027ll make them a module.\n\n[1] http://docs.ansible.com/ansible/playbooks_roles.html#embedding-modules-and-plugins-in-roles",
      "parentUuid": "baa041b7_f9a7d0a4",
      "range": {
        "startLine": 8,
        "startChar": 2,
        "endLine": 8,
        "endChar": 10
      },
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    },
    {
      "key": {
        "uuid": "baa041b7_f966b0b9",
        "filename": "tasks/main.yml",
        "patchSetId": 4
      },
      "lineNbr": 18,
      "author": {
        "id": 1003529
      },
      "writtenOn": "2016-05-26T12:50:43Z",
      "side": 1,
      "message": "Same here",
      "revId": "8a78c51625855c9770811abbb6680d661fd580ee",
      "serverId": "d5d70762-12d0-45a1-890d-524b12d3f735",
      "unresolved": false
    }
  ]
}